/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package konterhp;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.*;
import static java.util.Objects.hash;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
/**
 * s
 *
 * @author Baihaqi
 */
public class Kasir extends javax.swing.JFrame {

    private ArrayList<String> select = new ArrayList<>();
    public ArrayList<String> dataPembeli = new ArrayList<>();
    public ResultSet dataLogin;
    private DefaultTableModel model;
    Connection conn;
    PreparedStatement ps;
    Statement cs;
    ResultSet rs;
    private int grand_ = 0;
    static public boolean status = false;

    /**
     * Creates new form Kasir
     */
    public Kasir(ResultSet x) {
        initComponents();
        model = new DefaultTableModel();
        tableBarang.setModel(model);
        model.addColumn("Kode Barang");
        model.addColumn("Nama Barang");
        model.addColumn("Harga");
        model.addColumn("Qty");
        model.addColumn("Total");
        this.dataLogin = x;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jOptionPane1 = new javax.swing.JOptionPane();
        jPanel1 = new javax.swing.JPanel();
        checkOut = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        grand = new javax.swing.JLabel();
        grand1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableBarang = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        namaPenjual = new javax.swing.JLabel();
        tanggalJual = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        namaPembeli = new javax.swing.JLabel();
        pembeli = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        identifier = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jumlah = new javax.swing.JSpinner();
        found = new javax.swing.JLabel();
        delate = new javax.swing.JButton();
        tambah = new javax.swing.JButton();
        cari = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        barcode = new javax.swing.JToggleButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 153, 255));
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/img/hp.png")).getImage());
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(33, 85, 205));

        checkOut.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        checkOut.setText("Check Out");
        checkOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkOutActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Century", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Grand Total :");

        grand.setFont(new java.awt.Font("Century", 0, 18)); // NOI18N
        grand.setForeground(new java.awt.Color(255, 255, 255));
        grand.setText("0");

        grand1.setFont(new java.awt.Font("Century", 0, 18)); // NOI18N
        grand1.setForeground(new java.awt.Color(255, 255, 255));
        grand1.setText("Rp.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(grand1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(grand)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(checkOut)
                .addGap(58, 58, 58))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(grand)
                    .addComponent(checkOut)
                    .addComponent(grand1))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        tableBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Koda Barang", "Nama Barang", "Harga", "Qty", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableBarang.getTableHeader().setReorderingAllowed(false);
        tableBarang.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tableBarangFocusLost(evt);
            }
        });
        tableBarang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableBarangMouseReleased(evt);
            }
        });
        tableBarang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tableBarangKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tableBarang);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setText("Kasir       :");

        jLabel4.setText("Tanggal   :");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(namaPenjual, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                    .addComponent(tanggalJual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(87, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(namaPenjual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tanggalJual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel7.setText("Pembeli :");

        namaPembeli.setText(" ");

        pembeli.setText("Edit Pembeli");
        pembeli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pembeliActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(namaPembeli, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pembeli)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(namaPembeli)
                    .addComponent(pembeli))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setText("Identifier Barang");

        identifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                identifierActionPerformed(evt);
            }
        });
        identifier.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                identifierKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                identifierKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                identifierKeyTyped(evt);
            }
        });

        jLabel6.setText("Ditemukan --");

        jumlah.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jumlahStateChanged(evt);
            }
        });

        found.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        found.setText("0");

        delate.setText("Delete");
        delate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delateActionPerformed(evt);
            }
        });

        tambah.setText("Tambah");
        tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahActionPerformed(evt);
            }
        });

        cari.setText("Cari");
        cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Kasir Conter HP");

        barcode.setText("Barcode - Nonaktif");
        barcode.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                barcodeStateChanged(evt);
            }
        });
        barcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barcodeActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(33, 85, 205));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Logout");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(identifier, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(barcode)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(found, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(364, 364, 364)
                                .addComponent(jLabel1)
                                .addGap(339, 339, 339)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(delate, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                            .addComponent(cari, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                            .addComponent(tambah, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(4, 6, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(found, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cari)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tambah)
                            .addComponent(jumlah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(delate))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(identifier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(barcode))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("TOKO HP BOY");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahActionPerformed
        setDataTable();
    }//GEN-LAST:event_tambahActionPerformed

    private void pembeliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pembeliActionPerformed
        Pembeli halamanPembeli = new Pembeli();
        halamanPembeli.halamanKasir = this;
        if (!dataPembeli.isEmpty()) {
            halamanPembeli.pembeli = dataPembeli;
        }
        halamanPembeli.setVisible(true);
    }//GEN-LAST:event_pembeliActionPerformed

    private void delateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delateActionPerformed
        int i = tableBarang.getSelectedRow();
        if (i >= 0) {
            if (Integer.parseInt(model.getValueAt(i, 3).toString()) > 1) {
                model.setValueAt(Integer.parseInt(model.getValueAt(i, 3).toString()) - 1, i, 3);
                model.setValueAt(Integer.parseInt(model.getValueAt(i, 2).toString()) * Integer.parseInt(model.getValueAt(i, 3).toString()), i, 4);
                grand_ = 0;
                for (int x = 0; x < tableBarang.getRowCount(); x++) {
                    grand_ += Integer.parseInt(tableBarang.getValueAt(x, 4).toString());
                }
            } else {
                model.removeRow(i);
                grand_ = 0;
                for (int x = 0; x < tableBarang.getRowCount(); x++) {
                    grand_ += Integer.parseInt(tableBarang.getValueAt(x, 4).toString());
                }
            }
            String grand_final = "", temp = String.valueOf(grand_);
            for (int x = temp.length() - 1; x >= 0; x--) {
                grand_final += temp.charAt(x);
            }
            String[] grand__ = grand_final.split("(?<=\\G.)");
            temp = "";
            grand_final = "";
            for (int x = 1; x < grand__.length + 1; x++) {
                if (x % 3 == 0 && x < grand__.length) {
                    grand_final += grand__[x - 1] + ".";
                } else if (x % 3 == 0) {
                    grand_final += grand__[x - 1];
                } else {
                    grand_final += grand__[x - 1];
                }
            }
            for (int x = grand_final.length() - 1; x >= 0; x--) {
                temp += grand_final.charAt(x);
            }
            grand.setText(temp);
        }
    }//GEN-LAST:event_delateActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        tambah.setEnabled(false);
        jumlah.setEnabled(false);
        conn = koneksi.konek();
        Calendar time = Calendar.getInstance();
        time.setTime(new Date(System.currentTimeMillis()));
        tanggalJual.setText(time.get(Calendar.DATE) + " / " + (time.get(Calendar.MONTH) + 1) + " / " + time.get(Calendar.YEAR));
        try {
            namaPenjual.setText(dataLogin.getString("nama"));
        } catch (SQLException e) {
            System.out.println("Terjadi Error SQL : " + e);
        }
    }//GEN-LAST:event_formWindowOpened

    private void cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariActionPerformed
        if (status == true) {
            jumlah.setValue(0);
            identifier.setText("");
            select.clear();
            tambah.setEnabled(false);
            identifier.setEditable(true);
            cari.setText("Cari");
            jumlah.setEnabled(false);
            found.setText("0");
            status = false;
        } else {
            try {
                if (rs != null) {
                    if (!rs.isClosed()) {
                        if (found.getText().equals("1") && barcode.isSelected()) {
                            Cari halamanCari = new Cari();
                            Cari.identifier = identifier.getText();
                            halamanCari.halamanKasir = this;
                            halamanCari.isBarcode = true;
                            halamanCari.setVisible(true);
                        } else {
                            Cari halamanCari = new Cari();
                            Cari.identifier = identifier.getText();
                            halamanCari.halamanKasir = this;
                            halamanCari.setVisible(true);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Databases Tidak Terhubung!", "Warning", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            } catch (SQLException e) {
                System.out.println("Terjadi Error SQL : " + e);
            }
        }
    }//GEN-LAST:event_cariActionPerformed

    private void identifierKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_identifierKeyTyped

    }//GEN-LAST:event_identifierKeyTyped

    private void identifierKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_identifierKeyPressed

    }//GEN-LAST:event_identifierKeyPressed

    private void identifierKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_identifierKeyReleased
        if (status == false) {
            getIdentifier();
            if (evt.getKeyCode() == 10 && found.getText().equals("1") && barcode.isSelected()) {
                cariActionPerformed(null);
            }
        }
    }//GEN-LAST:event_identifierKeyReleased

    private void jumlahStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jumlahStateChanged
        if (Integer.parseInt(jumlah.getValue().toString()) < 0) {
            jumlah.setValue(0);
        } else if (!select.isEmpty()) {
            if (Integer.parseInt(jumlah.getValue().toString()) >= Integer.parseInt(select.get(4))) {
                jumlah.setValue(Integer.parseInt(select.get(4)));
            }
        }
    }//GEN-LAST:event_jumlahStateChanged

    private void checkOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkOutActionPerformed
        if (tableBarang.getRowCount() > 0) {
            if (JOptionPane.showConfirmDialog(null, "Lanjutkan Pembelian?", "CheckOut", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == 0) {
                try {
                    if (dataPembeli.get(0).equals("-Auto Increement-")) {
                        ps = conn.prepareStatement("INSERT INTO `tb_pembeli` VALUES (null, ?, ?, ?, ?)");
                        ps.setString(1, dataPembeli.get(1));
                        ps.setString(2, dataPembeli.get(2));
                        ps.setString(3, dataPembeli.get(3));
                        ps.setString(4, dataPembeli.get(4));
                        ps.executeUpdate();
                        ps.clearBatch();

                        ps = conn.prepareStatement("SELECT * FROM `tb_pembeli` ORDER BY `id_pembeli` DESC LIMIT 1;");
                        rs = ps.executeQuery();
                        rs.next();
                        dataPembeli.set(0, rs.getString("id_pembeli"));
                        rs.close();
                    }
                    ps = conn.prepareStatement("INSERT INTO `tb_penjualan` VALUES (null, ?, NOW(), ?, ?)");
                    ps.setString(1, namaPenjual.getText());
                    ps.setString(2, dataPembeli.get(0));
                    ps.setString(3, dataLogin.getString("id_pegawai"));
                    ps.executeUpdate();
                    ps.clearBatch();

                    for (int i = 0; i < tableBarang.getRowCount(); i++) {
                        ps = conn.prepareStatement("SELECT `jumlah` FROM `tb_barang` WHERE `id_barang` = ?");
                        ps.setInt(1, Integer.parseInt(tableBarang.getValueAt(i, 0).toString()));
                        rs = ps.executeQuery();
                        rs.next();
                        int id_barang_update = rs.getInt("jumlah");
                        ps.clearBatch();
                        ps = conn.prepareStatement("UPDATE `tb_barang` SET `jumlah`= (? - ?) WHERE `id_barang` = ?");
                        ps.setInt(1, id_barang_update);
                        ps.setString(2, tableBarang.getValueAt(i, 3).toString());
                        ps.setString(3, tableBarang.getValueAt(i, 0).toString());
                        ps.executeUpdate();
                        ps.clearBatch();

                        ps = conn.prepareStatement("INSERT INTO `tb_barang_keluar` VALUES (null, ?, ?, NOW(), (SELECT `tb_barang`.`jumlah` FROM `tb_barang` WHERE `tb_barang`.`id_barang` LIKE ?), 'seller', (SELECT tb_penjualan.id_penjualan FROM `tb_penjualan` ORDER BY `tb_penjualan`.`id_penjualan` DESC LIMIT 1))");
                        ps.setString(1, tableBarang.getValueAt(i, 0).toString());
                        ps.setString(2, tableBarang.getValueAt(i, 3).toString());
                        ps.setString(3, tableBarang.getValueAt(i, 0).toString());
                        ps.executeUpdate();
                        ps.clearBatch();
                    }
                    new Kasir(this.dataLogin).setVisible(true);
                    try {
                        cs = conn.createStatement();
                        rs = cs.executeQuery("SELECT * FROM `tb_penjualan` ORDER BY `id_penjualan` DESC LIMIT 1");
                        rs.next();
                        HashMap hash = new HashMap();
                        hash.put("id_penjualan", rs.getInt("id_penjualan"));
                        JasperPrint jp = JasperFillManager.fillReport(getClass().getResourceAsStream("/report/checkout.jasper"), hash, koneksi.konek());
                        JasperViewer.viewReport(jp, false);
                    } catch (JRException e) {
                    }
                    this.dispose();
                } catch (Exception e) {
                    System.out.println("Terjadi Error SQL : " + e + "  " + e.getCause());
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Tidak ada barang yang diinputkan..", "Peringatan", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_checkOutActionPerformed

    private void identifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_identifierActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_identifierActionPerformed

    private void barcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barcodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_barcodeActionPerformed

    private void barcodeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_barcodeStateChanged
        if(barcode.isSelected()){
            barcode.setText("    Barcode - Aktif  ");
        }else{
            barcode.setText("Barcode - Nonaktif");
        }
    }//GEN-LAST:event_barcodeStateChanged

    private void tableBarangKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableBarangKeyReleased

    }//GEN-LAST:event_tableBarangKeyReleased

    private void tableBarangMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableBarangMouseReleased

    }//GEN-LAST:event_tableBarangMouseReleased

    private void tableBarangFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tableBarangFocusLost

    }//GEN-LAST:event_tableBarangFocusLost

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        hal_login logout = new hal_login();
        logout.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Kasir(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton barcode;
    private javax.swing.JButton cari;
    private javax.swing.JButton checkOut;
    private javax.swing.JButton delate;
    private javax.swing.JLabel found;
    private javax.swing.JLabel grand;
    private javax.swing.JLabel grand1;
    private javax.swing.JTextField identifier;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jumlah;
    private javax.swing.JLabel namaPembeli;
    private javax.swing.JLabel namaPenjual;
    private javax.swing.JButton pembeli;
    private javax.swing.JTable tableBarang;
    private javax.swing.JButton tambah;
    private javax.swing.JLabel tanggalJual;
    // End of variables declaration//GEN-END:variables

    public void getIdentifier() {
        String real = identifier.getText();
        try {
            if (real.isEmpty()) {
                found.setText(String.valueOf(0));
            } else {
                int hasil = 0;
                ps = conn.prepareStatement("SELECT * FROM `tb_barang` WHERE (`id_barang` LIKE ? OR `nama_barang` LIKE ? OR `merk_barang` LIKE ? OR `tipe_barang` LIKE ? OR `keterangan` LIKE ? OR `barcode` LIKE ?) AND `jumlah` > 0");
                ps.setString(1, "%" + real + "%");
                ps.setString(2, "%" + real + "%");
                ps.setString(3, "%" + real + "%");
                ps.setString(4, "%" + real + "%");
                ps.setString(5, "%" + real + "%");
                ps.setString(6, "%" + real + "%");
                rs = ps.executeQuery();
                while (rs.next()) {
                    hasil += 1;
                }
                found.setText(String.valueOf(hasil));
            }
        } catch (SQLException e) {
            System.out.println("Terjadi Error SQL : " + e);
        }
    }

    public void setIdentifier(String x) {
        identifier.setText(x);
    }

    public void setSelect(int x, String y) {
        select.add(x, y);
    }

    public void refresh() {
        status = true;
        cari.setText("Clear");
        tambah.setEnabled(true);
        found.setText("1");
        identifier.setEditable(false);
        jumlah.setEnabled(true);
    }

    public void refreshPembeli() {
        namaPembeli.setText(dataPembeli.get(1));
    }

    public void setDataTable() {
        int selected = 0;
        boolean emptyTable = true;
        for (int i = 0; i < model.getRowCount(); i++) {
            if (select.get(0).equals(model.getValueAt(i, 0))) {
                emptyTable = false;
                selected = i;
                break;
            }
        }
        if (emptyTable) {
            model.fireTableDataChanged();
            if (Integer.parseInt(jumlah.getValue().toString()) > 0) {
                Object[] obj = new Object[5];
                obj[0] = select.get(0);
                obj[1] = select.get(1);
                obj[2] = select.get(5);
                obj[3] = jumlah.getValue().toString();
                obj[4] = String.valueOf(Integer.parseInt(select.get(5)) * Integer.parseInt(jumlah.getValue().toString()));
                model.addRow(obj);

                jumlah.setValue(0);
                identifier.setText("");
                select.clear();
                tambah.setEnabled(false);
                identifier.setEditable(true);
                cari.setText("Cari");
                jumlah.setEnabled(false);
                found.setText("0");
                status = false;
            }
        } else {

            Object[] obj = new Object[5];
            obj[0] = select.get(0);
            obj[1] = select.get(1);
            obj[2] = select.get(5);
            obj[3] = String.valueOf(Integer.parseInt(tableBarang.getValueAt(selected, 3).toString()) + Integer.parseInt(jumlah.getValue().toString()));
            obj[4] = String.valueOf(Integer.parseInt(select.get(5)) * Integer.parseInt(obj[3].toString()));

            model.getDataVector().removeElementAt(selected);
            model.addRow(obj);

            jumlah.setValue(0);
            identifier.setText("");
            select.clear();
            tambah.setEnabled(false);
            identifier.setEditable(true);
            cari.setText("Cari");
            jumlah.setEnabled(false);
            found.setText("0");
            status = false;
        }
        grand_ = 0;
        for (int x = 0; x < tableBarang.getRowCount(); x++) {
            grand_ += Integer.parseInt(tableBarang.getValueAt(x, 4).toString());
        }
        String grand_final = "", temp = String.valueOf(grand_);
        for (int i = temp.length() - 1; i >= 0; i--) {
            grand_final += temp.charAt(i);
        }
        String[] grand__ = grand_final.split("(?<=\\G.)");
        temp = "";
        grand_final = "";
        for (int i = 1; i < grand__.length + 1; i++) {
            if (i % 3 == 0 && i < grand__.length) {
                grand_final += grand__[i - 1] + ".";
            } else if (i % 3 == 0) {
                grand_final += grand__[i - 1];
            } else {
                grand_final += grand__[i - 1];
            }
        }
        for (int i = grand_final.length() - 1; i >= 0; i--) {
            temp += grand_final.charAt(i);
        }
        grand.setText(temp);
    }
    
    public void setJumlah(int x){
        jumlah.setValue(x);
    }
}
